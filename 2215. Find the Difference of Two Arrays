# https://leetcode.com/problems/find-the-difference-of-two-arrays/?envType=study-plan-v2&envId=leetcode-75
# 2215. Find the Difference of Two Arrays

/**
 * Return an array of arrays of size *returnSize.
 * The sizes of the arrays are returned as *returnColumnSizes array.
 * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().
 */
int** findDifference(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize, int** returnColumnSizes){
    int** ans = (int**)malloc(sizeof(int*) * 2);
    //**ans  
    ans[0] = (int*)calloc(nums1Size, sizeof(int));
    ans[1] = (int*)calloc(nums2Size, sizeof(int));
    //malloc 안에 malloc 하는법 몰라서 찾아봄! 안에 calloc 넣기

    bool temp[2001] = {false};
    // 2001개의 체크용 false array 생성
    bool temp2[2001] = {false};

    for (int i=0;i<nums1Size;i++){
        if (temp[nums1[i]+1000]==false){
            temp[nums1[i]+1000]=true;
        }
    }//nums1에 있는 원소 확인

    for (int j=0;j<nums2Size;j++){
        if (temp2[nums2[j]+1000]==false){
            temp2[nums2[j]+1000]=true;
        }
    }//nums2 에 있는 원소 확인

    int count1 = 0;
    int count2 = 0;
    for (int k=0;k<2001;k++){
        if(temp[k]==true && temp2[k]==false){
            ans[0][count1] = k-1000;
            count1 = count1 +1;
        }
        else if (temp[k]==false && temp2[k]==true){
            ans[1][count2] = k-1000;
            count2 = count2 +1;
        }//한쪽에만 있는 경우 answer에 넣어주기
    }
    *returnSize = 2;
    *returnColumnSizes = (int*)malloc(sizeof(int) * 2);
    (*returnColumnSizes)[0] = count1;
    (*returnColumnSizes)[1] = count2;
    return ans;
}
