# https://leetcode.com/problems/product-of-array-except-self/description/?envType=study-plan-v2&envId=leetcode-75
# 238. Product of Array Except Self

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* productExceptSelf(int* nums, int numsSize, int* returnSize){
    int *result = (int*)malloc((numsSize+1)*sizeof(int));
    *returnSize = numsSize;
    int zerocount = 0;

    int totalproduct =1;
    for (int i=0;i<numsSize;i++){
        if (nums[i]!=0){
            totalproduct = totalproduct * nums[i];
            }//0이 아닌 경우만 totalproduct에 곱해준다
        else{
            zerocount =zerocount +1;
        }//0이면 zerocount를 더해주기만 한다
    }

    if (zerocount ==0){
        for (int i=0;i<numsSize;i++){    
            result[i] = totalproduct / nums[i];
            } //0이 없었던 경우는 totalproduct에서 자기 자신을 나눈 값으로 result에 넣어준다
        }

    else if(zerocount >1 ){
        for (int i=0;i<numsSize;i++){
            result[i] = 0;
        }//0이 두개 이상이면 result는 0으로 채워준다
    }

    else {//0이 있었던 경우는
        for (int i=0;i<numsSize;i++){
            if (nums[i] ==0){
                result[i]=totalproduct;
            }//nums[i]가 0일때는 나머지를 다 곱한 값을 넣어준다
            else {//아니면 곱했을때 0이 된다
                result[i] = 0;
            }
        }

        }
     
    return result;
}
